{
  "version": "2.1.0",
  "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
  "runs": [
    {
      "tool": {
        "driver": {
          "fullName": "Lacework FortiCNAPP SCA",
          "informationUri": "https://www.lacework.com/",
          "name": "Lacework FortiCNAPP SCA",
          "rules": [
            {
              "id": "CVE-2015-2296",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2015-2296"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2015-2296",
              "help": {
                "text": "Vulnerability CVE-2015-2296\nSeverity: medium\nFixed Version: 2.6.0\nLink: [CVE-2015-2296](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2015-2296)\nThe `resolve_redirects` function in sessions.py in requests 2.1.0 through 2.5.3 allows remote attackers to conduct session fixation attacks via a cookie without a host value in a redirect.",
                "markdown": "**Vulnerability CVE-2015-2296**\n| Severity | Fixed Version | Link |\n| --- | --- | --- | --- |\n|medium|2.6.0|[CVE-2015-2296](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2015-2296)|\n\nThe `resolve_redirects` function in sessions.py in requests 2.1.0 through 2.5.3 allows remote attackers to conduct session fixation attacks via a cookie without a host value in a redirect."
              },
              "properties": {
                "security-severity": "5.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "medium"
                ]
              }
            },
            {
              "id": "CVE-2018-18074",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2018-18074"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-18074",
              "help": {
                "text": "Vulnerability CVE-2018-18074\nSeverity: high\nFixed Version: 2.20.0\nLink: [CVE-2018-18074](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-18074)\nThe Requests package through 2.19.1 before 2018-09-14 for Python sends an HTTP Authorization header to an http URI upon receiving a same-hostname https-to-http redirect, which makes it easier for remote attackers to discover credentials by sniffing the network.",
                "markdown": "**Vulnerability CVE-2018-18074**\n| Severity | Fixed Version | Link |\n| --- | --- | --- | --- |\n|high|2.20.0|[CVE-2018-18074](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-18074)|\n\nThe Requests package through 2.19.1 before 2018-09-14 for Python sends an HTTP Authorization header to an http URI upon receiving a same-hostname https-to-http redirect, which makes it easier for remote attackers to discover credentials by sniffing the network."
              },
              "properties": {
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "high"
                ]
              }
            },
            {
              "id": "CVE-2023-32681",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2023-32681"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-32681",
              "help": {
                "text": "Vulnerability CVE-2023-32681\nSeverity: medium\nFixed Version: 2.31.0\nLink: [CVE-2023-32681](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-32681)\n### Impact\n\nSince Requests v2.3.0, Requests has been vulnerable to potentially leaking `Proxy-Authorization` headers to destination servers, specifically during redirects to an HTTPS origin. This is a product of how `rebuild_proxies` is used to recompute and [reattach the `Proxy-Authorization` header](https://github.com/psf/requests/blob/f2629e9e3c7ce3c3c8c025bcd8db551101cbc773/requests/sessions.py#L319-L328) to requests when redirected. Note this behavior has _only_ been observed to affect proxied requests when credentials are supplied in the URL user information component (e.g. `https://username:password@proxy:8080`).\n\n**Current vulnerable behavior(s):**\n\n1. HTTP → HTTPS: **leak**\n2. HTTPS → HTTP: **no leak**\n3. HTTPS → HTTPS: **leak**\n4. HTTP → HTTP: **no leak**\n\nFor HTTP connections sent through the proxy, the proxy will identify the header in the request itself and remove it prior to forwarding to the destination server. However when sent over HTTPS, the `Proxy-Authorization` header must be sent in the CONNECT request as the proxy has no visibility into further tunneled requests. This results in Requests forwarding the header to the destination server unintentionally, allowing a malicious actor to potentially exfiltrate those credentials.\n\nThe reason this currently works for HTTPS connections in Requests is the `Proxy-Authorization` header is also handled by urllib3 with our usage of the ProxyManager in adapters.py with [`proxy_manager_for`](https://github.com/psf/requests/blob/f2629e9e3c7ce3c3c8c025bcd8db551101cbc773/requests/adapters.py#L199-L235). This will compute the required proxy headers in `proxy_headers` and pass them to the Proxy Manager, avoiding attaching them directly to the Request object. This will be our preferred option going forward for default usage.\n\n### Patches\nStarting in Requests v2.31.0, Requests will no longer attach this header to redirects with an HTTPS destination. This should have no negative impacts on the default behavior of the library as the proxy credentials are already properly being handled by urllib3`s ProxyManager.\n\nFor users with custom adapters, this _may_ be potentially breaking if you were already working around this behavior. The previous functionality of `rebuild_proxies` doesn`t make sense in any case, so we would encourage any users impacted to migrate any handling of Proxy-Authorization directly into their custom adapter.\n\n### Workarounds\nFor users who are not able to update Requests immediately, there is one potential workaround.\n\nYou may disable redirects by setting `allow_redirects` to `False` on all calls through Requests top-level APIs. Note that if you`re currently relying on redirect behaviors, you will need to capture the 3xx response codes and ensure a new request is made to the redirect destination.\n```\nimport requests\nr = requests.get(`http://github.com/`, allow_redirects=False)\n```\n\n### Credits\n\nThis vulnerability was discovered and disclosed by the following individuals.\n\nDennis Brinkrolf, Haxolot (https://haxolot.com/)\nTobias Funke, (tobiasfunke93@gmail.com)",
                "markdown": "**Vulnerability CVE-2023-32681**\n| Severity | Fixed Version | Link |\n| --- | --- | --- | --- |\n|medium|2.31.0|[CVE-2023-32681](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-32681)|\n\n### Impact\n\nSince Requests v2.3.0, Requests has been vulnerable to potentially leaking `Proxy-Authorization` headers to destination servers, specifically during redirects to an HTTPS origin. This is a product of how `rebuild_proxies` is used to recompute and [reattach the `Proxy-Authorization` header](https://github.com/psf/requests/blob/f2629e9e3c7ce3c3c8c025bcd8db551101cbc773/requests/sessions.py#L319-L328) to requests when redirected. Note this behavior has _only_ been observed to affect proxied requests when credentials are supplied in the URL user information component (e.g. `https://username:password@proxy:8080`).\n\n**Current vulnerable behavior(s):**\n\n1. HTTP → HTTPS: **leak**\n2. HTTPS → HTTP: **no leak**\n3. HTTPS → HTTPS: **leak**\n4. HTTP → HTTP: **no leak**\n\nFor HTTP connections sent through the proxy, the proxy will identify the header in the request itself and remove it prior to forwarding to the destination server. However when sent over HTTPS, the `Proxy-Authorization` header must be sent in the CONNECT request as the proxy has no visibility into further tunneled requests. This results in Requests forwarding the header to the destination server unintentionally, allowing a malicious actor to potentially exfiltrate those credentials.\n\nThe reason this currently works for HTTPS connections in Requests is the `Proxy-Authorization` header is also handled by urllib3 with our usage of the ProxyManager in adapters.py with [`proxy_manager_for`](https://github.com/psf/requests/blob/f2629e9e3c7ce3c3c8c025bcd8db551101cbc773/requests/adapters.py#L199-L235). This will compute the required proxy headers in `proxy_headers` and pass them to the Proxy Manager, avoiding attaching them directly to the Request object. This will be our preferred option going forward for default usage.\n\n### Patches\nStarting in Requests v2.31.0, Requests will no longer attach this header to redirects with an HTTPS destination. This should have no negative impacts on the default behavior of the library as the proxy credentials are already properly being handled by urllib3`s ProxyManager.\n\nFor users with custom adapters, this _may_ be potentially breaking if you were already working around this behavior. The previous functionality of `rebuild_proxies` doesn`t make sense in any case, so we would encourage any users impacted to migrate any handling of Proxy-Authorization directly into their custom adapter.\n\n### Workarounds\nFor users who are not able to update Requests immediately, there is one potential workaround.\n\nYou may disable redirects by setting `allow_redirects` to `False` on all calls through Requests top-level APIs. Note that if you`re currently relying on redirect behaviors, you will need to capture the 3xx response codes and ensure a new request is made to the redirect destination.\n```\nimport requests\nr = requests.get(`http://github.com/`, allow_redirects=False)\n```\n\n### Credits\n\nThis vulnerability was discovered and disclosed by the following individuals.\n\nDennis Brinkrolf, Haxolot (https://haxolot.com/)\nTobias Funke, (tobiasfunke93@gmail.com)"
              },
              "properties": {
                "security-severity": "6.1",
                "tags": [
                  "vulnerability",
                  "security",
                  "medium"
                ]
              }
            },
            {
              "id": "CVE-2024-35195",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2024-35195"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-35195",
              "help": {
                "text": "Vulnerability CVE-2024-35195\nSeverity: medium\nFixed Version: 2.32.0\nLink: [CVE-2024-35195](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-35195)\nWhen making requests through a Requests `Session`, if the first request is made with `verify=False` to disable cert verification, all subsequent requests to the same origin will continue to ignore cert verification regardless of changes to the value of `verify`. This behavior will continue for the lifecycle of the connection in the connection pool.\n\n### Remediation\nAny of these options can be used to remediate the current issue, we highly recommend upgrading as the preferred mitigation.\n\n* Upgrade to `requests\u003e=2.32.0`.\n* For `requests\u003c2.32.0`, avoid setting `verify=False` for the first request to a host while using a Requests Session.\n* For `requests\u003c2.32.0`, call `close()` on `Session` objects to clear existing connections if `verify=False` is used.\n\n### Related Links\n* https://github.com/psf/requests/pull/6655",
                "markdown": "**Vulnerability CVE-2024-35195**\n| Severity | Fixed Version | Link |\n| --- | --- | --- | --- |\n|medium|2.32.0|[CVE-2024-35195](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-35195)|\n\nWhen making requests through a Requests `Session`, if the first request is made with `verify=False` to disable cert verification, all subsequent requests to the same origin will continue to ignore cert verification regardless of changes to the value of `verify`. This behavior will continue for the lifecycle of the connection in the connection pool.\n\n### Remediation\nAny of these options can be used to remediate the current issue, we highly recommend upgrading as the preferred mitigation.\n\n* Upgrade to `requests\u003e=2.32.0`.\n* For `requests\u003c2.32.0`, avoid setting `verify=False` for the first request to a host while using a Requests Session.\n* For `requests\u003c2.32.0`, call `close()` on `Session` objects to clear existing connections if `verify=False` is used.\n\n### Related Links\n* https://github.com/psf/requests/pull/6655"
              },
              "properties": {
                "security-severity": "5.6",
                "tags": [
                  "vulnerability",
                  "security",
                  "medium"
                ]
              }
            },
            {
              "id": "CVE-2024-47081",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2024-47081"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-47081",
              "help": {
                "text": "Vulnerability CVE-2024-47081\nSeverity: medium\nFixed Version: 2.32.4\nLink: [CVE-2024-47081](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-47081)\n### Impact\n\nDue to a URL parsing issue, Requests releases prior to 2.32.4 may leak .netrc credentials to third parties for specific maliciously-crafted URLs.\n\n### Workarounds\nFor older versions of Requests, use of the .netrc file can be disabled with `trust_env=False` on your Requests Session ([docs](https://requests.readthedocs.io/en/latest/api/#requests.Session.trust_env)).\n\n### References\nhttps://github.com/psf/requests/pull/6965\nhttps://seclists.org/fulldisclosure/2025/Jun/2",
                "markdown": "**Vulnerability CVE-2024-47081**\n| Severity | Fixed Version | Link |\n| --- | --- | --- | --- |\n|medium|2.32.4|[CVE-2024-47081](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-47081)|\n\n### Impact\n\nDue to a URL parsing issue, Requests releases prior to 2.32.4 may leak .netrc credentials to third parties for specific maliciously-crafted URLs.\n\n### Workarounds\nFor older versions of Requests, use of the .netrc file can be disabled with `trust_env=False` on your Requests Session ([docs](https://requests.readthedocs.io/en/latest/api/#requests.Session.trust_env)).\n\n### References\nhttps://github.com/psf/requests/pull/6965\nhttps://seclists.org/fulldisclosure/2025/Jun/2"
              },
              "properties": {
                "security-severity": "5.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "medium"
                ]
              }
            }
          ],
          "version": "0.1.68"
        }
      },
      "results": [
        {
          "properties": {
            "category": "vulnerability",
            "dependency": {
              "direct": true,
              "packageVersionedName": "requests@2.3.0",
              "fullDependencyPath": [
                "requirements.txt",
                "requests@2.3.0"
              ]
            },
            "fixVersion": "2.6.0",
            "lastEdit": {
              "time": "2025-06-11T16:53:05-07:00",
              "revision": "6902cfa4acda31c26f4f5fc5cb7feee77d04e14c",
              "author": {
                "name": "Mary Pan",
                "email": "mpan@fortinet.com"
              },
              "committer": {
                "name": "Mary Pan",
                "email": "mpan@fortinet.com"
              }
            },
            "link": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2015-2296",
            "repository": {
              "kind": "git",
              "location": "ssh://github.com/lacework-dev/fortiqa-codesec-testdata.git",
              "branch": "main",
              "revision": "5b2215b64800214ad29421fac7ae9383e39851f7"
            },
            "severity": "medium",
            "versionType": "pep440"
          },
          "ruleId": "CVE-2015-2296",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "Package: requests@2.3.0 (direct)\nVulnerability CVE-2015-2296 (severity: medium, fixed in 2.6.0)\nSmartFix: 2.32.4 (Minimal version with no known vulnerabilities)\nLink: [CVE-2015-2296](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2015-2296)\nSample path: requirements.txt -\u003e requests@2.3.0\nExplanation: Why is this SmartFix recommended?\n\nSorted Version Graph for package pkg:pypi/requests@2.3.0\n  2.3.0 is vulnerable:\n    high       CVE-2018-18074       FixVersion= 2.20.0\n    medium     CVE-2015-2296        FixVersion= 2.6.0\n    medium     CVE-2023-32681       FixVersion= 2.31.0\n    medium     CVE-2024-35195       FixVersion= 2.32.0\n    medium     CVE-2024-47081       FixVersion= 2.32.4\n  2.6.0 is vulnerable:\n    high       CVE-2018-18074       FixVersion= 2.20.0\n    medium     CVE-2023-32681       FixVersion= 2.31.0\n    medium     CVE-2024-35195       FixVersion= 2.32.0\n    medium     CVE-2024-47081       FixVersion= 2.32.4\n  2.20.0 is vulnerable:\n    medium     CVE-2023-32681       FixVersion= 2.31.0\n    medium     CVE-2024-35195       FixVersion= 2.32.0\n    medium     CVE-2024-47081       FixVersion= 2.32.4\n  2.31.0 is vulnerable:\n    medium     CVE-2024-35195       FixVersion= 2.32.0\n    medium     CVE-2024-47081       FixVersion= 2.32.4\n  2.32.0 is vulnerable:\n    medium     CVE-2024-47081       FixVersion= 2.32.4\n  2.32.4 is not vulnerable\n\nFix recommendations for package pkg:pypi/requests@2.3.0\n  2.32.4 is the minimal version with no known vulnerabilities\n  2.32.4 is the maximum version and it has no known vulnerabilities\n  2.20.0 is the minimal version with no critical or high vulnerabilities\n\nStats: the Version Graph has 6 versions (nodes) and 15 CVEs (edges) (diameter=1)\n\n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "requirements.txt",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1,
                  "endLine": 1
                }
              },
              "message": {
                "text": "requirements.txt: requests@2.3.0"
              }
            }
          ],
          "partialFingerprints": {
            "hash/v1": "e3aa340dda24772e193a01a760b8026d880a6ffe"
          }
        },
        {
          "properties": {
            "category": "vulnerability",
            "dependency": {
              "direct": true,
              "packageVersionedName": "requests@2.3.0",
              "fullDependencyPath": [
                "requirements.txt",
                "requests@2.3.0"
              ]
            },
            "fixVersion": "2.20.0",
            "lastEdit": {
              "time": "2025-06-11T16:53:05-07:00",
              "revision": "6902cfa4acda31c26f4f5fc5cb7feee77d04e14c",
              "author": {
                "name": "Mary Pan",
                "email": "mpan@fortinet.com"
              },
              "committer": {
                "name": "Mary Pan",
                "email": "mpan@fortinet.com"
              }
            },
            "link": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-18074",
            "repository": {
              "kind": "git",
              "location": "ssh://github.com/lacework-dev/fortiqa-codesec-testdata.git",
              "branch": "main",
              "revision": "5b2215b64800214ad29421fac7ae9383e39851f7"
            },
            "severity": "high",
            "versionType": "pep440"
          },
          "ruleId": "CVE-2018-18074",
          "ruleIndex": 1,
          "level": "error",
          "message": {
            "text": "Package: requests@2.3.0 (direct)\nVulnerability CVE-2018-18074 (severity: high, fixed in 2.20.0)\nSmartFix: 2.32.4 (Minimal version with no known vulnerabilities)\nLink: [CVE-2018-18074](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-18074)\nSample path: requirements.txt -\u003e requests@2.3.0\nExplanation: Why is this SmartFix recommended?\n\nSorted Version Graph for package pkg:pypi/requests@2.3.0\n  2.3.0 is vulnerable:\n    high       CVE-2018-18074       FixVersion= 2.20.0\n    medium     CVE-2015-2296        FixVersion= 2.6.0\n    medium     CVE-2023-32681       FixVersion= 2.31.0\n    medium     CVE-2024-35195       FixVersion= 2.32.0\n    medium     CVE-2024-47081       FixVersion= 2.32.4\n  2.6.0 is vulnerable:\n    high       CVE-2018-18074       FixVersion= 2.20.0\n    medium     CVE-2023-32681       FixVersion= 2.31.0\n    medium     CVE-2024-35195       FixVersion= 2.32.0\n    medium     CVE-2024-47081       FixVersion= 2.32.4\n  2.20.0 is vulnerable:\n    medium     CVE-2023-32681       FixVersion= 2.31.0\n    medium     CVE-2024-35195       FixVersion= 2.32.0\n    medium     CVE-2024-47081       FixVersion= 2.32.4\n  2.31.0 is vulnerable:\n    medium     CVE-2024-35195       FixVersion= 2.32.0\n    medium     CVE-2024-47081       FixVersion= 2.32.4\n  2.32.0 is vulnerable:\n    medium     CVE-2024-47081       FixVersion= 2.32.4\n  2.32.4 is not vulnerable\n\nFix recommendations for package pkg:pypi/requests@2.3.0\n  2.32.4 is the minimal version with no known vulnerabilities\n  2.32.4 is the maximum version and it has no known vulnerabilities\n  2.20.0 is the minimal version with no critical or high vulnerabilities\n\nStats: the Version Graph has 6 versions (nodes) and 15 CVEs (edges) (diameter=1)\n\n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "requirements.txt",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1,
                  "endLine": 1
                }
              },
              "message": {
                "text": "requirements.txt: requests@2.3.0"
              }
            }
          ],
          "partialFingerprints": {
            "hash/v1": "b9879376dec5242a119f07fc68865711cdea4923"
          }
        },
        {
          "properties": {
            "category": "vulnerability",
            "dependency": {
              "direct": true,
              "packageVersionedName": "requests@2.3.0",
              "fullDependencyPath": [
                "requirements.txt",
                "requests@2.3.0"
              ]
            },
            "fixVersion": "2.31.0",
            "lastEdit": {
              "time": "2025-06-11T16:53:05-07:00",
              "revision": "6902cfa4acda31c26f4f5fc5cb7feee77d04e14c",
              "author": {
                "name": "Mary Pan",
                "email": "mpan@fortinet.com"
              },
              "committer": {
                "name": "Mary Pan",
                "email": "mpan@fortinet.com"
              }
            },
            "link": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-32681",
            "repository": {
              "kind": "git",
              "location": "ssh://github.com/lacework-dev/fortiqa-codesec-testdata.git",
              "branch": "main",
              "revision": "5b2215b64800214ad29421fac7ae9383e39851f7"
            },
            "severity": "medium",
            "versionType": "pep440"
          },
          "ruleId": "CVE-2023-32681",
          "ruleIndex": 2,
          "level": "warning",
          "message": {
            "text": "Package: requests@2.3.0 (direct)\nVulnerability CVE-2023-32681 (severity: medium, fixed in 2.31.0)\nSmartFix: 2.32.4 (Minimal version with no known vulnerabilities)\nLink: [CVE-2023-32681](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-32681)\nSample path: requirements.txt -\u003e requests@2.3.0\nExplanation: Why is this SmartFix recommended?\n\nSorted Version Graph for package pkg:pypi/requests@2.3.0\n  2.3.0 is vulnerable:\n    high       CVE-2018-18074       FixVersion= 2.20.0\n    medium     CVE-2015-2296        FixVersion= 2.6.0\n    medium     CVE-2023-32681       FixVersion= 2.31.0\n    medium     CVE-2024-35195       FixVersion= 2.32.0\n    medium     CVE-2024-47081       FixVersion= 2.32.4\n  2.6.0 is vulnerable:\n    high       CVE-2018-18074       FixVersion= 2.20.0\n    medium     CVE-2023-32681       FixVersion= 2.31.0\n    medium     CVE-2024-35195       FixVersion= 2.32.0\n    medium     CVE-2024-47081       FixVersion= 2.32.4\n  2.20.0 is vulnerable:\n    medium     CVE-2023-32681       FixVersion= 2.31.0\n    medium     CVE-2024-35195       FixVersion= 2.32.0\n    medium     CVE-2024-47081       FixVersion= 2.32.4\n  2.31.0 is vulnerable:\n    medium     CVE-2024-35195       FixVersion= 2.32.0\n    medium     CVE-2024-47081       FixVersion= 2.32.4\n  2.32.0 is vulnerable:\n    medium     CVE-2024-47081       FixVersion= 2.32.4\n  2.32.4 is not vulnerable\n\nFix recommendations for package pkg:pypi/requests@2.3.0\n  2.32.4 is the minimal version with no known vulnerabilities\n  2.32.4 is the maximum version and it has no known vulnerabilities\n  2.20.0 is the minimal version with no critical or high vulnerabilities\n\nStats: the Version Graph has 6 versions (nodes) and 15 CVEs (edges) (diameter=1)\n\n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "requirements.txt",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1,
                  "endLine": 1
                }
              },
              "message": {
                "text": "requirements.txt: requests@2.3.0"
              }
            }
          ],
          "partialFingerprints": {
            "hash/v1": "aab4363a8a2b77e2826e7bf2806a3bdb18d03d02"
          }
        },
        {
          "properties": {
            "category": "vulnerability",
            "dependency": {
              "direct": true,
              "packageVersionedName": "requests@2.3.0",
              "fullDependencyPath": [
                "requirements.txt",
                "requests@2.3.0"
              ]
            },
            "fixVersion": "2.32.0",
            "lastEdit": {
              "time": "2025-06-11T16:53:05-07:00",
              "revision": "6902cfa4acda31c26f4f5fc5cb7feee77d04e14c",
              "author": {
                "name": "Mary Pan",
                "email": "mpan@fortinet.com"
              },
              "committer": {
                "name": "Mary Pan",
                "email": "mpan@fortinet.com"
              }
            },
            "link": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-35195",
            "repository": {
              "kind": "git",
              "location": "ssh://github.com/lacework-dev/fortiqa-codesec-testdata.git",
              "branch": "main",
              "revision": "5b2215b64800214ad29421fac7ae9383e39851f7"
            },
            "severity": "medium",
            "versionType": "pep440"
          },
          "ruleId": "CVE-2024-35195",
          "ruleIndex": 3,
          "level": "warning",
          "message": {
            "text": "Package: requests@2.3.0 (direct)\nVulnerability CVE-2024-35195 (severity: medium, fixed in 2.32.0)\nSmartFix: 2.32.4 (Minimal version with no known vulnerabilities)\nLink: [CVE-2024-35195](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-35195)\nSample path: requirements.txt -\u003e requests@2.3.0\nExplanation: Why is this SmartFix recommended?\n\nSorted Version Graph for package pkg:pypi/requests@2.3.0\n  2.3.0 is vulnerable:\n    high       CVE-2018-18074       FixVersion= 2.20.0\n    medium     CVE-2015-2296        FixVersion= 2.6.0\n    medium     CVE-2023-32681       FixVersion= 2.31.0\n    medium     CVE-2024-35195       FixVersion= 2.32.0\n    medium     CVE-2024-47081       FixVersion= 2.32.4\n  2.6.0 is vulnerable:\n    high       CVE-2018-18074       FixVersion= 2.20.0\n    medium     CVE-2023-32681       FixVersion= 2.31.0\n    medium     CVE-2024-35195       FixVersion= 2.32.0\n    medium     CVE-2024-47081       FixVersion= 2.32.4\n  2.20.0 is vulnerable:\n    medium     CVE-2023-32681       FixVersion= 2.31.0\n    medium     CVE-2024-35195       FixVersion= 2.32.0\n    medium     CVE-2024-47081       FixVersion= 2.32.4\n  2.31.0 is vulnerable:\n    medium     CVE-2024-35195       FixVersion= 2.32.0\n    medium     CVE-2024-47081       FixVersion= 2.32.4\n  2.32.0 is vulnerable:\n    medium     CVE-2024-47081       FixVersion= 2.32.4\n  2.32.4 is not vulnerable\n\nFix recommendations for package pkg:pypi/requests@2.3.0\n  2.32.4 is the minimal version with no known vulnerabilities\n  2.32.4 is the maximum version and it has no known vulnerabilities\n  2.20.0 is the minimal version with no critical or high vulnerabilities\n\nStats: the Version Graph has 6 versions (nodes) and 15 CVEs (edges) (diameter=1)\n\n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "requirements.txt",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1,
                  "endLine": 1
                }
              },
              "message": {
                "text": "requirements.txt: requests@2.3.0"
              }
            }
          ],
          "partialFingerprints": {
            "hash/v1": "169c73b8e0309b4ba65dbed36d050ba231daae68"
          }
        },
        {
          "properties": {
            "category": "vulnerability",
            "dependency": {
              "direct": true,
              "packageVersionedName": "requests@2.3.0",
              "fullDependencyPath": [
                "requirements.txt",
                "requests@2.3.0"
              ]
            },
            "fixVersion": "2.32.4",
            "lastEdit": {
              "time": "2025-06-11T16:53:05-07:00",
              "revision": "6902cfa4acda31c26f4f5fc5cb7feee77d04e14c",
              "author": {
                "name": "Mary Pan",
                "email": "mpan@fortinet.com"
              },
              "committer": {
                "name": "Mary Pan",
                "email": "mpan@fortinet.com"
              }
            },
            "link": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-47081",
            "repository": {
              "kind": "git",
              "location": "ssh://github.com/lacework-dev/fortiqa-codesec-testdata.git",
              "branch": "main",
              "revision": "5b2215b64800214ad29421fac7ae9383e39851f7"
            },
            "severity": "medium",
            "versionType": "pep440"
          },
          "ruleId": "CVE-2024-47081",
          "ruleIndex": 4,
          "level": "warning",
          "message": {
            "text": "Package: requests@2.3.0 (direct)\nVulnerability CVE-2024-47081 (severity: medium, fixed in 2.32.4)\nSmartFix: 2.32.4 (Minimal version with no known vulnerabilities)\nLink: [CVE-2024-47081](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-47081)\nSample path: requirements.txt -\u003e requests@2.3.0\nExplanation: Why is this SmartFix recommended?\n\nSorted Version Graph for package pkg:pypi/requests@2.3.0\n  2.3.0 is vulnerable:\n    high       CVE-2018-18074       FixVersion= 2.20.0\n    medium     CVE-2015-2296        FixVersion= 2.6.0\n    medium     CVE-2023-32681       FixVersion= 2.31.0\n    medium     CVE-2024-35195       FixVersion= 2.32.0\n    medium     CVE-2024-47081       FixVersion= 2.32.4\n  2.6.0 is vulnerable:\n    high       CVE-2018-18074       FixVersion= 2.20.0\n    medium     CVE-2023-32681       FixVersion= 2.31.0\n    medium     CVE-2024-35195       FixVersion= 2.32.0\n    medium     CVE-2024-47081       FixVersion= 2.32.4\n  2.20.0 is vulnerable:\n    medium     CVE-2023-32681       FixVersion= 2.31.0\n    medium     CVE-2024-35195       FixVersion= 2.32.0\n    medium     CVE-2024-47081       FixVersion= 2.32.4\n  2.31.0 is vulnerable:\n    medium     CVE-2024-35195       FixVersion= 2.32.0\n    medium     CVE-2024-47081       FixVersion= 2.32.4\n  2.32.0 is vulnerable:\n    medium     CVE-2024-47081       FixVersion= 2.32.4\n  2.32.4 is not vulnerable\n\nFix recommendations for package pkg:pypi/requests@2.3.0\n  2.32.4 is the minimal version with no known vulnerabilities\n  2.32.4 is the maximum version and it has no known vulnerabilities\n  2.20.0 is the minimal version with no critical or high vulnerabilities\n\nStats: the Version Graph has 6 versions (nodes) and 15 CVEs (edges) (diameter=1)\n\n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "requirements.txt",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1,
                  "endLine": 1
                }
              },
              "message": {
                "text": "requirements.txt: requests@2.3.0"
              }
            }
          ],
          "partialFingerprints": {
            "hash/v1": "f64dc0290b4fa3481daad348895a024bd67821fc"
          }
        }
      ],
      "originalUriBaseIds": {
        "%SRCROOT%": {
          "uri": "file:///home/mpan/repos/lacework/fortiqa-codesec-testdata/e2e/test_data/sca/python"
        }
      }
    }
  ]
}